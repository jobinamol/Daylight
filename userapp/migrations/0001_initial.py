# Generated by Django 5.1 on 2025-02-03 04:06

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookingpackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=255, null=True)),
                ('num_adults', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('num_children', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_method', models.CharField(choices=[('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('net_banking', 'Net Banking'), ('upi', 'UPI')], max_length=50)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('check_in_date', models.DateField(blank=True, null=True)),
                ('check_out_date', models.DateField(blank=True, null=True)),
                ('num_rooms', models.IntegerField(default=1)),
                ('food_preference', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'ordering': ['-booking_date'],
            },
        ),
        migrations.CreateModel(
            name='PackageManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=255)),
                ('package_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=10)),
                ('room_type', models.CharField(max_length=50)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserDB',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('mobilenumber', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Mobile number must be between 10 and 15 digits and can optionally start with a '+' sign.", regex='^\\+?\\d{10,15}$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('age', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('sex', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Username may only contain letters, numbers, and @/./+/-/_ characters.', regex='^[\\w.@+-]+$')])),
                ('profile_image', models.ImageField(default='default.jpg', upload_to='profile_images/')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('otp_secret', models.CharField(blank=True, max_length=16, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='userdb_set', related_query_name='userdb', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='userdb_set', related_query_name='userdb', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'unique_together': {('email', 'username')},
            },
        ),
        migrations.CreateModel(
            name='ResortProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resort_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resort Profile',
                'verbose_name_plural': 'Resort Profiles',
                'db_table': 'userapp_resortprofile',
            },
        ),
        migrations.CreateModel(
            name='ResortImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='resort_images/')),
                ('resort', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='userapp.resortprofile')),
            ],
            options={
                'verbose_name': 'Resort Image',
                'verbose_name_plural': 'Resort Images',
            },
        ),
    ]
